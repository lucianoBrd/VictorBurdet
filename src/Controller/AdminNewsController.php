<?php

namespace App\Controller;

use App\Entity\News;
use App\Form\NewsType;
use App\Repository\NewsRepository;
use Symfony\Component\Filesystem\Filesystem;
use Symfony\Component\HttpFoundation\Request;
use Doctrine\Common\Persistence\ObjectManager;
use Symfony\Component\Routing\Annotation\Route;
use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;

class AdminNewsController extends AbstractController
{
    /**
     * @Route("/admin/news", name="admin_news")
     */
    public function index(NewsRepository $repo)
    {
        $this->denyAccessUnlessGranted('IS_AUTHENTICATED_FULLY');
        $news = $repo->findAll();
        return $this->render('admin_news/index.html.twig', [
            'news' => $news
        ]);
    }

    /**
     * @Route("/admin/news/new", name="admin_news_create")
     * @Route("/admin/news/{id}/edit", name="admin_news_edit")
     */
    public function manage(Request $request, ObjectManager $manager, News $news = null, Filesystem $fileSystem)
    {
        $this->denyAccessUnlessGranted('IS_AUTHENTICATED_FULLY');
        if (!$news) {
            $news = new News();
        }

        $editMode = $news->getId() != null;
        if($editMode){
            $name = $news->getData()->getName();
        }

        $form = $this->createForm(NewsType::class, $news);

        $form->handleRequest($request);

        if ($form->isSubmitted() && $form->isValid()) {
            $noneChange = false;
            if($editMode && $news->getData()->getName() != null){
                $fileSystem->remove($this->getParameter('data_directory').'/'.$name);
            } elseif($editMode && $news->getData()->getName() == null){
                $news->getData()->setName($name);
                $noneChange = true;
            }

            if(!$noneChange){
                /** @var Symfony\Component\HttpFoundation\File\UploadedFile $file */
                $file = $news->getData()->getName();

                $fileName = $this->generateUniqueFileName().'.'.$file->guessExtension();

                $news->getData()->setExtension($file->guessExtension());
                // Move the file to the directory where brochures are stored
                try {
                    $file->move(
                        $this->getParameter('data_directory'),
                        $fileName
                    );
                } catch (FileException $e) {
                    // ... handle exception if something happens during file upload
                }
                $news->getData()->setName($fileName);
            }
            

            $manager->persist($news);
            $manager->flush();

            if (!$editMode) {
                $this->addFlash('success', 'News créée');
            } else {
                $this->addFlash('success', 'News modifiée');
            }

            return $this->redirectToRoute('admin_news');
        }

        return $this->render('admin_news/manage.html.twig', [
            'form' => $form->createView(),
            'editMode' => $editMode,
            'news' => $news
        ]);
    }

    /**
     * @Route("/admin/news/{id}/delete", name="admin_news_delete")
     */
    public function delete(News $news, ObjectManager $manager, Filesystem $fileSystem)
    {
        $this->denyAccessUnlessGranted('IS_AUTHENTICATED_FULLY');
        $fileSystem->remove($this->getParameter('data_directory').'/'.$news->getData()->getName());
        $manager->remove($news);
        $manager->flush();
        $this->addFlash('success', 'News supprimée');
        return $this->redirectToRoute('admin_news');
    }

    /**
     * @return string
     */
    private function generateUniqueFileName()
    {
        // md5() reduces the similarity of the file names generated by
        // uniqid(), which is based on timestamps
        return md5(uniqid());
    }
}
